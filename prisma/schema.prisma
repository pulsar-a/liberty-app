// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Book {
  id              Int              @id @default(autoincrement())
  name            String
  bookIdentifier  String
  identifierType  String
  fileName        String
  cover           String?
  description     String?
  fileFormat      String?
  readingProgress Int?
  score           Int?
  collections     CollectionBook[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  authorBook      AuthorBook[]

  @@unique([bookIdentifier, identifierType], name: "uniqueBookId")
  @@map("books")
}

model Author {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  books     AuthorBook[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  @@map("authors")
}

model AuthorBook {
  book     Book   @relation(fields: [bookId], references: [id])
  bookId   Int
  author   Author @relation(fields: [authorId], references: [id])
  authorId Int

  @@id([bookId, authorId])
  @@index([bookId])
  @@index([authorId])
  @@map("author_book")
}

model CollectionBook {
  book         Book       @relation(fields: [bookId], references: [id])
  bookId       Int
  author       Collection @relation(fields: [collectionId], references: [id])
  collectionId Int

  @@id([bookId, collectionId])
  @@index([bookId])
  @@index([collectionId])
  @@map("collection_book")
}

model Collection {
  id        Int              @id @default(autoincrement())
  name      String
  color     String
  content   String?
  books     CollectionBook[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@map("collections")
}
